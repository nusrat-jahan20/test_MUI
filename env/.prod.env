# Application settings for the "prod" (production) environment.
# Use the following CLI commands for reading/writing secrets:
#
#   $ yarn envars set <name> <value> --env=prod --secret
#   $ yarn envars get <name> --env=prod
#
# NOTE: You can override any of these settings by placing them
#       into ".prod.override.env" file (excluded from the repo).

APP_NAME=example
APP_HOSTNAME=example.com
APP_ORIGIN=https://example.com
API_ORIGIN=https://api-xxxxx-uc.a.run.app
API_SERVICE_ACCOUNT=
VERSION=latest

# Google Cloud
# https://console.cloud.google.com/
GOOGLE_CLOUD_PROJECT=example-prod
GOOGLE_CLOUD_REGION=us-central1
GOOGLE_CLOUD_ZONE=us-central1-f
GOOGLE_CLOUD_SQL_INSTANCE=example:us-central1:pg14
GOOGLE_APPLICATION_CREDENTIALS=../env/gcp-key.prod.json

# Firebase / Firestore
# https://console.firebase.google.com/
FIREBASE_APP_ID=xxxxx
FIREBASE_API_KEY=xxxxx
FIREBASE_AUTH_DOMAIN=example.com

# Cloudflare
# https://dash.cloudflare.com/
# https://developers.cloudflare.com/api/tokens/create
CLOUDFLARE_ACCOUNT_ID=xxxxx
CLOUDFLARE_ZONE_ID=xxxxx
CLOUDFLARE_API_TOKEN=xxxxx

# PostgreSQL
# https://www.postgresql.org/docs/current/static/libpq-envars.html
PGHOST=localhost
PGPORT=5432
PGUSER=postgres
PGPASSWORD=
PGDATABASE=app_prod
# PGSSLMODE=verify-ca
# PGSSLCERT=../db/ssl/client-cert.prod.pem
# PGSSLKEY=../db/ssl/client-key.prod.pem
# PGSSLROOTCERT=../db/ssl/server-ca.prod.pem
# PGSERVERNAME=example-prod:pg14

# Cloud storage bucket for user uploaded content and static assets
# https://console.cloud.google.com/storage/browser
UPLOAD_BUCKET=upload.example.com
STORAGE_BUCKET=s.example.com
CACHE_BUCKET=c.example.com
PKG_BUCKET=pkg.example.com

# SendGrid
# https://app.sendgrid.com/settings/api_keys
SENDGRID_API_KEY=SG.xxxxx
EMAIL_FROM=hello@example.com

# Google Analytics (v4)
# https://developers.google.com/analytics/devguides/collection/ga4
GA_MEASUREMENT_ID=G-XXXXXXXX
